name: Deploy Static Website

on:
  push:
    branches:
      - main  # Trigger on push to the main branch

permissions:
  id-token: write
  contents: read

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the code from the repo
    - name: Checkout code
      uses: actions/checkout@v3

    # Step 2: Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v1
      with:
        terraform_version: '1.9.8'

    # Step 3: Login to Azure using individual secrets
    - name: Login to Azure
      uses: azure/login@v2
      with:
         creds: ${{ secrets.AZURE_CREDENTIALS }}  # Use Service Principal credentials in JSON format

    # Step 4: Unzip Static Website Files
    - name: Extract ZIP file
      run: unzip -o ./website.zip -d ./static-website

    # Step 5: Change to the directory containing Terraform files
    - name: Change directory to terraform
      run: cd terraform

    # Step 6: Terraform Init
    - name: Terraform Init
      run: |
        cd terraform  # Navigate to the terraform directory
        terraform init

    # Step 7: Terraform Plan
    - name: Terraform Plan
      run: |
        cd terraform  # Ensure you're in the terraform directory
        terraform plan -out=tfplan

    # Step 8: Terraform Apply
    - name: Terraform Apply
      run: |
        cd terraform  # Ensure you're in the terraform directory
        terraform apply -auto-approve tfplan

    # Step 9: Upload files to Azure Blob Storage $web container
    - name: Upload files to $web container
      run: |
        az storage blob upload-batch -d \$web --account-name ${{ secrets.AZURE_STORAGE_ACCOUNT_NAME }} -s ./static-website

    # Step 10: Terraform Destroy (Optional)
    - name: Terraform Destroy (Optional)
      run: |
        cd terraform
        terraform destroy -auto-approve
      if: github.event_name == 'workflow_dispatch'
